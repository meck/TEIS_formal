vunit exp_formal (exp(behav))
{

    attribute anyconst : boolean;
    attribute gclk : boolean;

    signal f_addr : std_logic_vector(3 downto 0);
    signal f_data : std_logic_vector(3 downto 0);
    signal f_half_clk : std_logic;

    attribute anyconst of f_addr : signal is true;

    signal f_clk : std_logic;
    attribute gclk of f_clk : signal is true;

    signal f_past_val : boolean := false;

    process is
    begin
      wait until rising_edge (clk_w);
        if (we = '1') and (w_addr = f_addr)  then
          f_data <= data_in;
          f_past_val <= true;
        end if;
        f_half_clk <= not f_half_clk;
    end process;

    default Clock is rising_edge(f_clk);

    assume always clk_r = f_half_clk;

    -- ram_write : assert always f_past_val -> next ram(to_integer(unsigned(f_addr))) = f_data;

    -- ram_read : assert always r_addr = f_addr -> next data_out = prev(f_data);

}


